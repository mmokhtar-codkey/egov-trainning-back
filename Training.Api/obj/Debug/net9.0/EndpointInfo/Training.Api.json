{
  "openapi": "3.0.1",
  "info": {
    "title": "Training Web API",
    "description": "Starter Training For Web API",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/actions/get/{id}": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "Get By Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/getall": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "Get All",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/actions/getpaged": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "GetAll Data paged",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Accept-Language"
          }
        ],
        "requestBody": {
          "description": "Filter responsible for search and sort",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActionFilterBaseParam"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionFilterBaseParam"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionFilterBaseParam"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActionFilterBaseParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiPagedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiPagedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiPagedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiPagedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiPagedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDtoIEnumerableApiPagedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/get/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get By Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/getall": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get All",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories/getpaged": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "GetAll Data paged",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Accept-Language"
          }
        ],
        "requestBody": {
          "description": "Filter responsible for search and sort",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryFilterBaseParam"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryFilterBaseParam"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryFilterBaseParam"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryFilterBaseParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiPagedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiPagedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiPagedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiPagedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiPagedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDtoIEnumerableApiPagedResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionDto": {
        "required": [
          "nameAr",
          "nameEn"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "nameEn": {
            "minLength": 1,
            "type": "string"
          },
          "nameAr": {
            "minLength": 1,
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActionDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/ActionDto"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ActionDtoIEnumerableApiPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ActionDtoIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ActionFilter": {
        "type": "object",
        "properties": {
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameAr": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ActionFilterBaseParam": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "$ref": "#/components/schemas/ActionFilter"
          },
          "orderByValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryDto": {
        "required": [
          "nameAr",
          "nameEn"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "nameEn": {
            "minLength": 1,
            "type": "string"
          },
          "nameAr": {
            "minLength": 1,
            "type": "string"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/CategoryDto"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CategoryDtoIEnumerableApiPagedResponse": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CategoryDtoIEnumerableApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDto"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CategoryFilter": {
        "type": "object",
        "properties": {
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameAr": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CategoryFilterBaseParam": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "$ref": "#/components/schemas/CategoryFilter"
          },
          "orderByValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SortModel": {
        "type": "object",
        "properties": {
          "colId": {
            "type": "string",
            "nullable": true
          },
          "sort": {
            "type": "string",
            "nullable": true
          },
          "pairAsSqlExpression": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}